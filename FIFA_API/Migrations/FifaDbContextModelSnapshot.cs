// <auto-generated />
using System;
using FIFA_API.Models.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FIFA_API.Migrations
{
    [DbContext(typeof(FifaDbContext))]
    partial class FifaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("act_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeAction")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("act_type");

                    b.HasKey("Id")
                        .HasName("pk_act");

                    b.ToTable("t_e_action_act");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Activite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ati_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ati_nom");

                    b.HasKey("Id")
                        .HasName("pk_ati");

                    b.ToTable("t_e_activite_ati");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Adresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Rue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("adr_rue");

                    b.Property<int>("VilleId")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_adr");

                    b.HasIndex("VilleId");

                    b.ToTable("t_e_adresse_adr");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("alb_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateHeure")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("alb_date_heure");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("alb_resume");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("alb_titre");

                    b.HasKey("Id")
                        .HasName("pk_alb");

                    b.ToTable("t_e_album_alb");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.AlbumImage", b =>
                {
                    b.Property<int>("AlbumId")
                        .HasColumnType("integer")
                        .HasColumnName("alb_id");

                    b.Property<int>("ImageId")
                        .HasColumnType("integer")
                        .HasColumnName("img_id");

                    b.HasKey("AlbumId", "ImageId")
                        .HasName("pk_ali");

                    b.HasIndex("ImageId");

                    b.ToTable("t_j_albumimage_ali");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Anecdote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("anc_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("JoueurId")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("anc_question");

                    b.Property<string>("Reponse")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("anc_reponse");

                    b.HasKey("Id")
                        .HasName("pk_anc");

                    b.HasIndex("JoueurId");

                    b.ToTable("t_e_anecdote_anc");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("art_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateHeure")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("art_dateheure");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("art_resume");

                    b.Property<string>("Texte")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("art_texte");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("art_titre");

                    b.HasKey("Id")
                        .HasName("pk_art");

                    b.ToTable("t_e_article_art");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ArticleJoueur", b =>
                {
                    b.Property<int>("ArticleId")
                        .HasColumnType("integer")
                        .HasColumnName("art_id");

                    b.Property<int>("JoueurId")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.HasKey("ArticleId", "JoueurId")
                        .HasName("pk_atj");

                    b.HasIndex("JoueurId");

                    b.ToTable("t_j_articlejoueur_atj");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ArticleMedia", b =>
                {
                    b.Property<int>("ArticleId")
                        .HasColumnType("integer")
                        .HasColumnName("art_id");

                    b.Property<int>("MediaId")
                        .HasColumnType("integer")
                        .HasColumnName("med_id");

                    b.HasKey("ArticleId", "MediaId")
                        .HasName("pk_atm");

                    b.HasIndex("MediaId");

                    b.ToTable("t_j_articlemedia_atm");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("blg_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateHeure")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("blg_dateheure");

                    b.Property<string>("DescriptionBlog")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("blg_descriptionblog");

                    b.Property<int>("IdArticle")
                        .HasColumnType("integer")
                        .HasColumnName("art_id");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("blg_resume");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("blg_titre");

                    b.HasKey("Id")
                        .HasName("pk_blg");

                    b.ToTable("t_e_blog_blg");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.BlogImage", b =>
                {
                    b.Property<int>("BlogId")
                        .HasColumnType("integer")
                        .HasColumnName("blg_id");

                    b.Property<int>("ImageId")
                        .HasColumnType("integer")
                        .HasColumnName("img_id");

                    b.HasKey("BlogId", "ImageId")
                        .HasName("pk_bli");

                    b.HasIndex("ImageId");

                    b.ToTable("t_j_blogimage_bli");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Caracteristique", b =>
                {
                    b.Property<int>("CaracteristiqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("car_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CaracteristiqueId"));

                    b.Property<string>("CaracteristiqueNom")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("car_nom");

                    b.HasKey("CaracteristiqueId")
                        .HasName("pk_car");

                    b.ToTable("t_e_caracteristique_car");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.CaracteristiqueProduit", b =>
                {
                    b.Property<int>("CaracteristiqueId")
                        .HasColumnType("integer")
                        .HasColumnName("car_id");

                    b.Property<int>("ProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("pro_id");

                    b.HasKey("CaracteristiqueId", "ProduitId")
                        .HasName("pk_cpd");

                    b.HasIndex("ProduitId");

                    b.ToTable("t_j_caracteristique_produit_cpd");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Categorie", b =>
                {
                    b.Property<int>("CategorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cat_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategorieId"));

                    b.Property<string>("CategorieNom")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("cat_nom");

                    b.HasKey("CategorieId")
                        .HasName("pk_cat");

                    b.ToTable("t_e_categorie_cat");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Club", b =>
                {
                    b.Property<int>("ClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClubId"));

                    b.Property<string>("ClubInitiales")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("clb_initiales");

                    b.Property<string>("ClubNom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("clb_nom");

                    b.HasKey("ClubId")
                        .HasName("pk_clb");

                    b.ToTable("t_e_club_clb");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Coloris", b =>
                {
                    b.Property<int>("ColorisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ColorisId"));

                    b.Property<string>("ColorisNom")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("clr_nom");

                    b.HasKey("ColorisId")
                        .HasName("pk_clr");

                    b.ToTable("t_e_coloris_clr");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Commande", b =>
                {
                    b.Property<int>("CommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cmd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CommandeId"));

                    b.Property<int>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.Property<DateTime>("CommandeDateCommande")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cmd_datecommande");

                    b.Property<DateTime>("CommandeDateLivraison")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cmd_datelivraison");

                    b.Property<bool>("CommandeDomicil")
                        .HasColumnType("boolean")
                        .HasColumnName("cmd_domicile");

                    b.Property<string>("CommandeEtatCommande")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("cmd_etatcommande");

                    b.Property<decimal>("CommandePrix")
                        .HasColumnType("numeric")
                        .HasColumnName("cmd_prix");

                    b.Property<int>("LivraisonId")
                        .HasColumnType("integer")
                        .HasColumnName("liv_id");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.HasKey("CommandeId")
                        .HasName("pk_cmd");

                    b.HasIndex("AdresseId");

                    b.HasIndex("LivraisonId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_e_commande_cmd");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Commentaire", b =>
                {
                    b.Property<int>("CommentaireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("com_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CommentaireId"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("integer")
                        .HasColumnName("alb_id");

                    b.Property<int>("ArticleId")
                        .HasColumnType("integer")
                        .HasColumnName("art_id");

                    b.Property<int>("BlogId")
                        .HasColumnType("integer")
                        .HasColumnName("blg_id");

                    b.Property<DateTime>("CommentaireDateHeure")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("com_dateheure");

                    b.Property<int>("CommentaireIdCommentaire")
                        .HasColumnType("integer")
                        .HasColumnName("com_id");

                    b.Property<string>("CommentaireTexte")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("com_texte");

                    b.Property<int>("DocumentId")
                        .HasColumnType("integer")
                        .HasColumnName("doc_id");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.HasKey("CommentaireId")
                        .HasName("pk_com");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("BlogId");

                    b.HasIndex("CommentaireIdCommentaire")
                        .IsUnique();

                    b.HasIndex("DocumentId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_e_commentaire_com");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Competition", b =>
                {
                    b.Property<int>("CompetitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cpn_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CompetitionId"));

                    b.Property<string>("CompetitionNom")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("cpn_nom");

                    b.HasKey("CompetitionId")
                        .HasName("pk_cpn");

                    b.ToTable("t_e_competition_cpn");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Compte", b =>
                {
                    b.Property<int>("CompteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cpt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CompteId"));

                    b.Property<bool>("CompteAnnonces")
                        .HasColumnType("boolean")
                        .HasColumnName("cpt_annonces");

                    b.Property<DateTime>("CompteDateConnexion")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cpt_dateconnexion");

                    b.Property<string>("CompteEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cpt_email");

                    b.Property<string>("CompteMdp")
                        .HasColumnType("char(128)")
                        .HasColumnName("cpt_mdp");

                    b.Property<bool>("CompteOffres")
                        .HasColumnType("boolean")
                        .HasColumnName("cpt_offres");

                    b.Property<string>("Comptelogin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cpt_login");

                    b.Property<int>("TypeCompte")
                        .HasColumnType("integer")
                        .HasColumnName("cpt_typecompte");

                    b.HasKey("CompteId")
                        .HasName("pk_cpt");

                    b.ToTable("t_e_compte_cpt");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Devis", b =>
                {
                    b.Property<int>("DevisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("dev_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DevisId"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("dev_message");

                    b.Property<int?>("ProduitId")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("pro_id");

                    b.Property<string>("Sujet")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("dev_sujet");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.HasKey("DevisId")
                        .HasName("pk_dev");

                    b.HasIndex("ProduitId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_e_devis_dev");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("doc_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DocumentId"));

                    b.Property<DateTime>("DateHeure")
                        .HasColumnType("date")
                        .HasColumnName("doc_dateheure");

                    b.Property<string>("LienPdf")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("doc_lienpdf");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("doc_resume");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("doc_titre");

                    b.HasKey("DocumentId")
                        .HasName("pk_doc");

                    b.HasIndex(new[] { "LienPdf" }, "uq_doc_lienpdf")
                        .IsUnique();

                    b.ToTable("t_e_document_doc");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Film", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("flm_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FilmId"));

                    b.Property<int>("MediaId")
                        .HasColumnType("integer")
                        .HasColumnName("med_id");

                    b.HasKey("FilmId")
                        .HasName("pk_flm");

                    b.HasIndex("MediaId");

                    b.ToTable("t_e_film_flm");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.FormulaireAide", b =>
                {
                    b.Property<int>("IdFormulaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("foa_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdFormulaire"));

                    b.Property<int>("IdUtilisateur")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.Property<string>("NomUtilisateur")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("utl_nom");

                    b.Property<int>("NumAction")
                        .HasColumnType("integer")
                        .HasColumnName("foa_numaction");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("foa_question");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("foa_telephone");

                    b.HasKey("IdFormulaire")
                        .HasName("pk_foa");

                    b.HasIndex("IdUtilisateur");

                    b.HasIndex("NumAction");

                    b.ToTable("t_e_formulaireaide_foa");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("gen_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GenreId"));

                    b.Property<string>("GenreNom")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("gen_nom");

                    b.HasKey("GenreId")
                        .HasName("pk_gen");

                    b.ToTable("t_e_genre_gen");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Image", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("img_id");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img_url");

                    b.HasKey("Id")
                        .HasName("pk_img");

                    b.ToTable("t_e_image_img");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ImageJoueur", b =>
                {
                    b.Property<int>("ImageId")
                        .HasColumnType("integer");

                    b.Property<int>("JoueurId")
                        .HasColumnType("integer");

                    b.HasKey("ImageId", "JoueurId")
                        .HasName("pk_imj");

                    b.HasIndex("JoueurId");

                    b.ToTable("t_j_image_joueur_imj");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ImageVariante", b =>
                {
                    b.Property<int>("ImageId")
                        .HasColumnType("integer")
                        .HasColumnName("img_id");

                    b.Property<int>("VarianteProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("vpd_id");

                    b.HasKey("ImageId", "VarianteProduitId")
                        .HasName("pk_imv");

                    b.HasIndex("VarianteProduitId");

                    b.ToTable("t_j_imagevariante_imv");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.InfosBancaires", b =>
                {
                    b.Property<int>("IdUtilisateur")
                        .HasColumnType("integer")
                        .HasColumnName("inb_id");

                    b.Property<string>("AnneeExpiration")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("inb_anneeexpiration");

                    b.Property<string>("MoisExpiration")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("inb_moisexpiration");

                    b.Property<string>("NomCarte")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("inb_nomcarte");

                    b.Property<string>("NumCarte")
                        .IsRequired()
                        .HasMaxLength(228)
                        .HasColumnType("character varying(228)")
                        .HasColumnName("inb_numcarte");

                    b.HasKey("IdUtilisateur")
                        .HasName("pk_inb");

                    b.ToTable("t_e_infos_bancaires_inb");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Joueur", b =>
                {
                    b.Property<int>("IdJoueur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdJoueur"));

                    b.Property<int?>("ClubId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("date")
                        .HasColumnName("jou_datenaissance");

                    b.Property<string>("DescriptionJoueur")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("jou_description");

                    b.Property<int?>("IdClub")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    b.Property<int>("IdVille")
                        .HasColumnType("integer")
                        .HasColumnName("vil_id");

                    b.Property<string>("NomJoueur")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("jou_nom");

                    b.Property<int>("NumPoste")
                        .HasColumnType("integer")
                        .HasColumnName("jou_numposte");

                    b.Property<string>("Pied")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("jou_pied");

                    b.Property<decimal>("Poids")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("jou_poids");

                    b.Property<string>("PrenomJoueur")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("jou_prenom");

                    b.Property<int>("Taille")
                        .HasColumnType("integer")
                        .HasColumnName("jou_taille");

                    b.HasKey("IdJoueur")
                        .HasName("pk_jou");

                    b.HasIndex("ClubId");

                    b.HasIndex("IdClub");

                    b.HasIndex("IdVille");

                    b.HasIndex("NumPoste");

                    b.ToTable("t_e_joueur_jou");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.JoueurTheme", b =>
                {
                    b.Property<int>("ThemeId")
                        .HasColumnType("integer")
                        .HasColumnName("the_num");

                    b.Property<int>("JoueurId")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.HasKey("ThemeId", "JoueurId")
                        .HasName("pk_jot");

                    b.HasIndex("JoueurId");

                    b.ToTable("t_j_joueur_theme_jot");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Langue", b =>
                {
                    b.Property<int>("LangueNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("lng_num");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LangueNum"));

                    b.Property<string>("LangueNom")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lng_nom");

                    b.HasKey("LangueNum")
                        .HasName("pk_lng");

                    b.ToTable("t_e_langue_lng");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LigneCommande", b =>
                {
                    b.Property<int>("LigneCommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("lcd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LigneCommandeId"));

                    b.Property<int>("CommandeId")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_numcommande");

                    b.Property<int>("NumTaille")
                        .HasColumnType("integer")
                        .HasColumnName("tll_numtaille");

                    b.Property<int>("NumeroLigneCommande")
                        .HasColumnType("integer")
                        .HasColumnName("lcd_num");

                    b.Property<int>("PrixLigneCommande")
                        .HasColumnType("integer")
                        .HasColumnName("lcd_prix");

                    b.Property<int>("QuantiteLigneCommande")
                        .HasColumnType("integer")
                        .HasColumnName("lcd_quantite");

                    b.Property<int>("VarianteProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("vpd_id");

                    b.HasKey("LigneCommandeId")
                        .HasName("pk_lcd");

                    b.HasIndex("CommandeId");

                    b.HasIndex("NumTaille");

                    b.HasIndex("VarianteProduitId");

                    b.ToTable("t_e_ligne_commande_lcd");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeAlbum", b =>
                {
                    b.Property<int>("AlbumId")
                        .HasColumnType("integer")
                        .HasColumnName("alb_id");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.HasKey("AlbumId", "UtilisateurId")
                        .HasName("pk_lab");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_j_like_album_lab");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeArticle", b =>
                {
                    b.Property<int>("ArticleId")
                        .HasColumnType("integer")
                        .HasColumnName("art_id");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.HasKey("ArticleId", "UtilisateurId")
                        .HasName("pk_lar");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_j_like_article_lar");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeBlog", b =>
                {
                    b.Property<int>("BlogId")
                        .HasColumnType("integer")
                        .HasColumnName("blg_id");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.HasKey("BlogId", "UtilisateurId")
                        .HasName("pk_lab");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_j_like_blog_lbg");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeDocument", b =>
                {
                    b.Property<int>("DocumentId")
                        .HasColumnType("integer")
                        .HasColumnName("doc_id");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.HasKey("DocumentId", "UtilisateurId")
                        .HasName("pk_ldc");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_j_like_document_ldc");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Livraison", b =>
                {
                    b.Property<int>("LivraisonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("liv_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LivraisonId"));

                    b.Property<double>("PrixLivraison")
                        .HasColumnType("double precision")
                        .HasColumnName("liv_prix");

                    b.Property<string>("TypeLivraison")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("liv_type");

                    b.HasKey("LivraisonId")
                        .HasName("pk_liv");

                    b.ToTable("t_e_livraison_liv");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mch_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MatchId"));

                    b.Property<int>("ClubDomicileId")
                        .HasColumnType("integer")
                        .HasColumnName("clb_domicileid");

                    b.Property<int>("ClubExterieurId")
                        .HasColumnType("integer")
                        .HasColumnName("clb_exterieurid");

                    b.Property<DateTime>("DateMatch")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("mch_datematch");

                    b.Property<int>("ScoreDomicile")
                        .HasColumnType("integer")
                        .HasColumnName("mch_scoredomicile");

                    b.Property<int>("ScoreExterieur")
                        .HasColumnType("integer")
                        .HasColumnName("mch_ScoreExterieur");

                    b.HasKey("MatchId")
                        .HasName("pk_mch");

                    b.HasIndex("ClubDomicileId");

                    b.HasIndex("ClubExterieurId");

                    b.ToTable("t_e_match_mch");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.MatchJoue", b =>
                {
                    b.Property<int>("JoueurId")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.Property<int>("MatchId")
                        .HasColumnType("integer")
                        .HasColumnName("mch_id");

                    b.Property<int>("NbButs")
                        .HasColumnType("integer")
                        .HasColumnName("mtj_nbbuts");

                    b.Property<int>("NbMinutes")
                        .HasColumnType("integer")
                        .HasColumnName("mtj_nbminutes");

                    b.Property<string>("Selection")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mtj_selection");

                    b.Property<string>("Titularisation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mtj_titularisation");

                    b.HasKey("JoueurId", "MatchId")
                        .HasName("pk_mtj");

                    b.HasIndex("MatchId");

                    b.ToTable("t_j_match_joue_mtj");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Media", b =>
                {
                    b.Property<int>("MediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("med_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MediaId"));

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("med_url");

                    b.HasKey("MediaId")
                        .HasName("pk_med");

                    b.ToTable("t_e_media_med");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Monnaie", b =>
                {
                    b.Property<int>("MonnaieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mon_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MonnaieId"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mon_nom");

                    b.Property<string>("Symbole")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mon_symbole");

                    b.HasKey("MonnaieId")
                        .HasName("pk_mon");

                    b.ToTable("t_e_monnaie_mon");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Pays", b =>
                {
                    b.Property<int>("PaysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pay_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PaysId"));

                    b.Property<string>("NomPays")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("pay_nom");

                    b.HasKey("PaysId")
                        .HasName("pk_pay");

                    b.ToTable("t_e_pays_pay");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Poste", b =>
                {
                    b.Property<int>("NumPoste")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pos_num");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NumPoste"));

                    b.Property<string>("LibellePoste")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("pos_libelle");

                    b.HasKey("NumPoste")
                        .HasName("pk_pos");

                    b.ToTable("t_e_poste_pos");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Produit", b =>
                {
                    b.Property<int>("IdProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pro_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProduit"));

                    b.Property<string>("DescriptionProduit")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("pro_description");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer")
                        .HasColumnName("gen_id");

                    b.Property<int?>("IdCompetition")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("comp_id");

                    b.Property<string>("NomProduit")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("pro_nom");

                    b.Property<int>("NumCategorie")
                        .HasColumnType("integer")
                        .HasColumnName("cat_num");

                    b.Property<int>("NumPays")
                        .HasColumnType("integer")
                        .HasColumnName("pay_num");

                    b.HasKey("IdProduit")
                        .HasName("pk_pro");

                    b.HasIndex("GenreId");

                    b.HasIndex("IdCompetition");

                    b.HasIndex("NumCategorie");

                    b.HasIndex("NumPays");

                    b.ToTable("t_e_produit_pro");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ProduitSimilaire", b =>
                {
                    b.Property<int>("ProduitUnId")
                        .HasColumnType("integer")
                        .HasColumnName("pro_id_un");

                    b.Property<int>("ProduitDeuxId")
                        .HasColumnType("integer")
                        .HasColumnName("pro_id_deux");

                    b.HasKey("ProduitUnId", "ProduitDeuxId")
                        .HasName("pk_prs");

                    b.HasIndex("ProduitDeuxId");

                    b.ToTable("t_j_produit_similaire_prs");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Reglement", b =>
                {
                    b.Property<int>("NumTransaction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tra_num");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NumTransaction"));

                    b.Property<DateTime>("DateReglement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("reg_date")
                        .HasDefaultValueSql("now()");

                    b.Property<decimal>("Montant")
                        .HasColumnType("numeric")
                        .HasColumnName("reg_montant");

                    b.Property<int>("NumCommande")
                        .HasColumnType("integer")
                        .HasColumnName("com_num");

                    b.HasKey("NumTransaction")
                        .HasName("pk_reg");

                    b.HasIndex("NumCommande");

                    b.ToTable("t_e_reglement_reg");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Remporte", b =>
                {
                    b.Property<int>("IdJoueur")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.Property<int>("NumTrophee")
                        .HasColumnType("integer")
                        .HasColumnName("tro_num");

                    b.Property<char>("Annee")
                        .HasColumnType("char(4)")
                        .HasColumnName("rem_annee");

                    b.Property<int?>("TropheeNumTrophee")
                        .HasColumnType("integer");

                    b.HasKey("IdJoueur", "NumTrophee", "Annee")
                        .HasName("pk_rem");

                    b.HasIndex("NumTrophee");

                    b.HasIndex("TropheeNumTrophee");

                    b.ToTable("t_j_remporte_rem");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.SousCategorie", b =>
                {
                    b.Property<int>("CategorieParentId")
                        .HasColumnType("integer")
                        .HasColumnName("cat_parent");

                    b.Property<int>("CategorieEnfantId")
                        .HasColumnType("integer")
                        .HasColumnName("cat_enfant");

                    b.HasKey("CategorieParentId", "CategorieEnfantId")
                        .HasName("pk_atm");

                    b.HasIndex("CategorieEnfantId");

                    b.ToTable("t_j_sous_categorie_sct");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("stk_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StockId"));

                    b.Property<int>("NumTaille")
                        .HasColumnType("integer")
                        .HasColumnName("tai_num");

                    b.Property<int>("QuantiteStockeeId")
                        .HasColumnType("integer")
                        .HasColumnName("stk_quantitestockee");

                    b.Property<int>("VarianteProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("vpd_id");

                    b.HasKey("StockId")
                        .HasName("pk_stk");

                    b.HasIndex("NumTaille");

                    b.HasIndex("VarianteProduitId");

                    b.ToTable("t_e_stock_stk");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Taille", b =>
                {
                    b.Property<int>("NumTaille")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tai_num");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NumTaille"));

                    b.Property<string>("LibelleTaille")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("tai_libelle");

                    b.HasKey("NumTaille")
                        .HasName("pk_tai");

                    b.ToTable("t_e_taille_tai");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Theme", b =>
                {
                    b.Property<int>("ThemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("the_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ThemeId"));

                    b.Property<string>("LibelleTheme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("the_libelle");

                    b.HasKey("ThemeId")
                        .HasName("pk_the");

                    b.ToTable("t_j_theme_the");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Trophee", b =>
                {
                    b.Property<int>("NumTrophee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tro_num");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NumTrophee"));

                    b.Property<string>("NomTrophee")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("tro_nom");

                    b.HasKey("NumTrophee")
                        .HasName("pk_tro");

                    b.ToTable("t_e_trophee_tro");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Utilisateur", b =>
                {
                    b.Property<int>("UtilisateurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UtilisateurId"));

                    b.Property<int?>("AdresseId")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.Property<int?>("AdresseId1")
                        .HasColumnType("integer");

                    b.Property<int?>("CompteId")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("com_id");

                    b.Property<int?>("CompteId1")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("date")
                        .HasColumnName("utl_datenaissance");

                    b.Property<int?>("IdActivite")
                        .HasColumnType("integer")
                        .HasColumnName("act_id");

                    b.Property<int>("LangueId")
                        .HasColumnType("integer")
                        .HasColumnName("lan_id");

                    b.Property<int?>("LangueNum")
                        .HasColumnType("integer");

                    b.Property<int?>("MonnaieId")
                        .HasColumnType("integer");

                    b.Property<string>("NomAcheteur")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("utl_nomacheteur");

                    b.Property<int>("NumMonnaie")
                        .HasColumnType("integer")
                        .HasColumnName("mon_id");

                    b.Property<string>("NumSociete")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("soc_num");

                    b.Property<string>("NumTva")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("utl_numtva");

                    b.Property<int>("PaysFavoriId")
                        .HasColumnType("integer")
                        .HasColumnName("pay_paysfavori_id");

                    b.Property<int>("PaysNaissanceId")
                        .HasColumnType("integer")
                        .HasColumnName("pay_paysnaissance_id");

                    b.Property<string>("PrenomUtilisateur")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("utl_prenom");

                    b.Property<string>("TelAcheteur")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("utl_telacheteur");

                    b.HasKey("UtilisateurId")
                        .HasName("pk_utl");

                    b.HasIndex("AdresseId");

                    b.HasIndex("AdresseId1");

                    b.HasIndex("CompteId1")
                        .IsUnique();

                    b.HasIndex("IdActivite");

                    b.HasIndex("LangueId");

                    b.HasIndex("LangueNum");

                    b.HasIndex("MonnaieId");

                    b.HasIndex("NumMonnaie");

                    b.HasIndex("PaysFavoriId");

                    b.HasIndex("PaysNaissanceId");

                    b.HasIndex(new[] { "CompteId" }, "uq_utl_idcompte")
                        .IsUnique();

                    b.HasIndex(new[] { "NumSociete" }, "uq_utl_numSociete")
                        .IsUnique();

                    b.HasIndex(new[] { "NumTva" }, "uq_utl_numtva")
                        .IsUnique();

                    b.HasIndex(new[] { "TelAcheteur" }, "uq_utl_telacheteur")
                        .IsUnique();

                    b.ToTable("t_e_utilisateur_utl");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.VarianteProduit", b =>
                {
                    b.Property<int>("VarianteProduitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vpd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VarianteProduitId"));

                    b.Property<int>("ColorisId")
                        .HasColumnType("integer")
                        .HasColumnName("clr_id");

                    b.Property<int?>("ColorisId1")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrixVariante")
                        .HasColumnType("decimal")
                        .HasColumnName("vpd_prixvariante");

                    b.Property<int>("ProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("pro_id");

                    b.Property<int?>("ProduitIdProduit")
                        .HasColumnType("integer");

                    b.Property<decimal>("Promo")
                        .HasColumnType("decimal")
                        .HasColumnName("vpd_promo");

                    b.HasKey("VarianteProduitId")
                        .HasName("pk_vil");

                    b.HasIndex("ColorisId");

                    b.HasIndex("ColorisId1");

                    b.HasIndex("ProduitId");

                    b.HasIndex("ProduitIdProduit");

                    b.ToTable("t_e_variante_produit_vpd");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Ville", b =>
                {
                    b.Property<int>("IdVille")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vil_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdVille"));

                    b.Property<char>("CodePostal")
                        .HasColumnType("char(5)")
                        .HasColumnName("vil_codepostal");

                    b.Property<string>("NomVille")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("vil_nom");

                    b.Property<int>("NumPays")
                        .HasColumnType("integer")
                        .HasColumnName("pay_id");

                    b.Property<int?>("PaysId")
                        .HasColumnType("integer");

                    b.HasKey("IdVille")
                        .HasName("pk_vil");

                    b.HasIndex("NumPays");

                    b.HasIndex("PaysId");

                    b.ToTable("t_e_ville_vil");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Vote", b =>
                {
                    b.Property<int>("IdUtilisateur")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.Property<int>("NumTheme")
                        .HasColumnType("integer")
                        .HasColumnName("the_num");

                    b.Property<int>("IdJoueur")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.Property<int>("Note")
                        .HasColumnType("integer")
                        .HasColumnName("vot_note");

                    b.Property<int?>("ThemeId")
                        .HasColumnType("integer");

                    b.Property<int?>("UtilisateurId")
                        .HasColumnType("integer");

                    b.HasKey("IdUtilisateur", "NumTheme", "IdJoueur")
                        .HasName("pk_vot");

                    b.HasIndex("IdJoueur");

                    b.HasIndex("NumTheme");

                    b.HasIndex("ThemeId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_e_vote_vot");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Adresse", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Ville", "LienVille")
                        .WithMany("LiensAdresses")
                        .HasForeignKey("VilleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("pk_ali");

                    b.Navigation("LienVille");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.AlbumImage", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Album", "AlbumNavigation")
                        .WithMany("LiensImages")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ali_alb");

                    b.HasOne("FIFA_API.Models.EntityFramework.Image", "ImageNavigation")
                        .WithMany("LiensAlbums")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ali_img");

                    b.Navigation("AlbumNavigation");

                    b.Navigation("ImageNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Anecdote", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "JoueurNavigation")
                        .WithMany("LienAnecdotes")
                        .HasForeignKey("JoueurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_anc_jou");

                    b.Navigation("JoueurNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ArticleJoueur", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Article", "ArticleNavigation")
                        .WithMany("LiensJoueur")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_atj_art");

                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "JoueurNavigation")
                        .WithMany("LiensArticles")
                        .HasForeignKey("JoueurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_atj_jou");

                    b.Navigation("ArticleNavigation");

                    b.Navigation("JoueurNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ArticleMedia", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Article", "ArticleNavigation")
                        .WithMany("LiensMedias")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_atm_art");

                    b.HasOne("FIFA_API.Models.EntityFramework.Media", "MediaNavigation")
                        .WithMany("LiensArticles")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_atm_med");

                    b.Navigation("ArticleNavigation");

                    b.Navigation("MediaNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.BlogImage", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Blog", "BlogNavigation")
                        .WithMany("LiensImages")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_bli_blg");

                    b.HasOne("FIFA_API.Models.EntityFramework.Image", "ImageNavigation")
                        .WithMany("LiensBlogs")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_bli_img");

                    b.Navigation("BlogNavigation");

                    b.Navigation("ImageNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.CaracteristiqueProduit", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Caracteristique", "CaracteristiqueNavigation")
                        .WithMany("LienProduits")
                        .HasForeignKey("CaracteristiqueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cpd_car");

                    b.HasOne("FIFA_API.Models.EntityFramework.Produit", "ProduitNavigation")
                        .WithMany("LienCaracteristiques")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cpd_pro");

                    b.Navigation("CaracteristiqueNavigation");

                    b.Navigation("ProduitNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Commande", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Adresse", "AdresseCommande")
                        .WithMany("CommandesAdresse")
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Livraison", "LivraisonCommande")
                        .WithMany("CommandesLivraison")
                        .HasForeignKey("LivraisonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurCommandant")
                        .WithMany("CommandesUtilisateur")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdresseCommande");

                    b.Navigation("LivraisonCommande");

                    b.Navigation("UtilisateurCommandant");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Commentaire", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Album", "AlbumCommente")
                        .WithMany("CommentairesAlbum")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Article", "ArticleCommente")
                        .WithMany("CommentairesArticle")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Blog", "BlogCommente")
                        .WithMany("CommentairesBlog")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Commentaire", "CommenteCommentaire")
                        .WithOne("CommentaireCommente")
                        .HasForeignKey("FIFA_API.Models.EntityFramework.Commentaire", "CommentaireIdCommentaire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Document", "DocumentCommente")
                        .WithMany("CommentairesDocument")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurCommentant")
                        .WithMany("CommentairesUtilisateur")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlbumCommente");

                    b.Navigation("ArticleCommente");

                    b.Navigation("BlogCommente");

                    b.Navigation("CommenteCommentaire");

                    b.Navigation("DocumentCommente");

                    b.Navigation("UtilisateurCommentant");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Devis", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Produit", "ProduitDevis")
                        .WithMany("DevisProduit")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_dev_pro");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurDevis")
                        .WithMany("LiensDevis")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_dev_utl");

                    b.Navigation("ProduitDevis");

                    b.Navigation("UtilisateurDevis");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Film", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Media", "FilmMedia")
                        .WithMany("MediaFilm")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_flm_med");

                    b.Navigation("FilmMedia");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.FormulaireAide", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurDuFormulaire")
                        .WithMany("FormulairesAideUtilisateur")
                        .HasForeignKey("IdUtilisateur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_foa_utl");

                    b.HasOne("FIFA_API.Models.EntityFramework.Action", "FormulaireAction")
                        .WithMany("ActionFormulaireAide")
                        .HasForeignKey("NumAction")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_foa_act");

                    b.Navigation("FormulaireAction");

                    b.Navigation("UtilisateurDuFormulaire");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Image", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Media", "MediaImage")
                        .WithMany("ImagesMedia")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MediaImage");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ImageJoueur", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Image", "ImageNavigation")
                        .WithMany("LiensJoueurs")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_imj_img");

                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "JoueurNavigation")
                        .WithMany("LiensImages")
                        .HasForeignKey("JoueurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_imj_jou");

                    b.Navigation("ImageNavigation");

                    b.Navigation("JoueurNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ImageVariante", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Image", "ImageNavigation")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_imv_img");

                    b.HasOne("FIFA_API.Models.EntityFramework.VarianteProduit", "VarianteProduitNavigation")
                        .WithMany("LienImages")
                        .HasForeignKey("VarianteProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_imv_vpd");

                    b.Navigation("ImageNavigation");

                    b.Navigation("VarianteProduitNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.InfosBancaires", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurInfoBc")
                        .WithMany("InfosBancairesUtilisateur")
                        .HasForeignKey("IdUtilisateur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_inb_utl");

                    b.Navigation("UtilisateurInfoBc");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Joueur", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Club", null)
                        .WithMany("JoueursClub")
                        .HasForeignKey("ClubId");

                    b.HasOne("FIFA_API.Models.EntityFramework.Club", "ClubJoueur")
                        .WithMany()
                        .HasForeignKey("IdClub")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Ville", "VilleJoueur")
                        .WithMany("JoueursVille")
                        .HasForeignKey("IdVille")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Poste", "PosteJoueur")
                        .WithMany("JoueursPoste")
                        .HasForeignKey("NumPoste")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClubJoueur");

                    b.Navigation("PosteJoueur");

                    b.Navigation("VilleJoueur");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.JoueurTheme", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "JoueurNavigation")
                        .WithMany("LienTheme")
                        .HasForeignKey("JoueurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_jot_jou");

                    b.HasOne("FIFA_API.Models.EntityFramework.Theme", "ThemeNavigation")
                        .WithMany("LienJoueur")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_jot_the");

                    b.Navigation("JoueurNavigation");

                    b.Navigation("ThemeNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LigneCommande", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Commande", "CommandeNavigation")
                        .WithMany("LignesCommandes")
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lcd_cmd");

                    b.HasOne("FIFA_API.Models.EntityFramework.Taille", "TailleNavigation")
                        .WithMany("LignesCommandes")
                        .HasForeignKey("NumTaille")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lcd_tai");

                    b.HasOne("FIFA_API.Models.EntityFramework.VarianteProduit", "VarianteProduitNavigation")
                        .WithMany("LignesCommandesVariante")
                        .HasForeignKey("VarianteProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lcd_vpd");

                    b.Navigation("CommandeNavigation");

                    b.Navigation("TailleNavigation");

                    b.Navigation("VarianteProduitNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeAlbum", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Album", "AlbumNavigation")
                        .WithMany("LikesAlbums")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lab_alb");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurNavigation")
                        .WithMany("LikesAlbums")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lab_utl");

                    b.Navigation("AlbumNavigation");

                    b.Navigation("UtilisateurNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeArticle", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Article", "ArticleNavigation")
                        .WithMany("LikesArticles")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lar_art");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurNavigation")
                        .WithMany("LikesArticles")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lar_utl");

                    b.Navigation("ArticleNavigation");

                    b.Navigation("UtilisateurNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeBlog", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Blog", "BlogNavigation")
                        .WithMany("LikesBlogs")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lbg_blg");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurNavigation")
                        .WithMany("LikesBlogs")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lbg_utl");

                    b.Navigation("BlogNavigation");

                    b.Navigation("UtilisateurNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeDocument", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Document", "DocumentNavigation")
                        .WithMany("LikesDocuments")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ldc_doc");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurNavigation")
                        .WithMany("LikesDocuments")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ldc_utl");

                    b.Navigation("DocumentNavigation");

                    b.Navigation("UtilisateurNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Match", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Club", "ClubDomicileMatch")
                        .WithMany("MatchesDomicile")
                        .HasForeignKey("ClubDomicileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_mchdom_clb");

                    b.HasOne("FIFA_API.Models.EntityFramework.Club", "ClubExterieurMatch")
                        .WithMany("MatchesExterieur")
                        .HasForeignKey("ClubExterieurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_mchext_clb");

                    b.Navigation("ClubDomicileMatch");

                    b.Navigation("ClubExterieurMatch");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.MatchJoue", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "JoueurNavigation")
                        .WithMany("Matches_joue")
                        .HasForeignKey("JoueurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_mtj_jou");

                    b.HasOne("FIFA_API.Models.EntityFramework.Match", "MatchNavigation")
                        .WithMany("Matches_joue")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_mtj_mch");

                    b.Navigation("JoueurNavigation");

                    b.Navigation("MatchNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Produit", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Genre", "GenreProduit")
                        .WithMany("ProduitsGenre")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pro_gen");

                    b.HasOne("FIFA_API.Models.EntityFramework.Competition", "CompetitionProduit")
                        .WithMany("ProduitsCompetition")
                        .HasForeignKey("IdCompetition")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pro_cpn");

                    b.HasOne("FIFA_API.Models.EntityFramework.Categorie", "CategorieNavigation")
                        .WithMany("ProduitsCategorie")
                        .HasForeignKey("NumCategorie")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pro_cat");

                    b.HasOne("FIFA_API.Models.EntityFramework.Pays", "PaysProduit")
                        .WithMany("ProduitsPays")
                        .HasForeignKey("NumPays")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pro_pay");

                    b.Navigation("CategorieNavigation");

                    b.Navigation("CompetitionProduit");

                    b.Navigation("GenreProduit");

                    b.Navigation("PaysProduit");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ProduitSimilaire", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Produit", "DeuxiemeProduit")
                        .WithMany("ProduitSimilaireLienDeux")
                        .HasForeignKey("ProduitDeuxId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_prs_pro_deux");

                    b.HasOne("FIFA_API.Models.EntityFramework.Produit", "PremierProduit")
                        .WithMany("ProduitSimilaireLienUn")
                        .HasForeignKey("ProduitUnId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_prs_pro_un");

                    b.Navigation("DeuxiemeProduit");

                    b.Navigation("PremierProduit");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Reglement", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Commande", "CommandeRegle")
                        .WithMany("ReglementsCommande")
                        .HasForeignKey("NumCommande")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CommandeRegle");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Remporte", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "JoueurRemportant")
                        .WithMany("RemportesJoueur")
                        .HasForeignKey("IdJoueur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Trophee", "TropheeRemporte")
                        .WithMany()
                        .HasForeignKey("NumTrophee")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Trophee", null)
                        .WithMany("RemportesTrophee")
                        .HasForeignKey("TropheeNumTrophee");

                    b.Navigation("JoueurRemportant");

                    b.Navigation("TropheeRemporte");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.SousCategorie", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Categorie", "ObjCategorieEnfant")
                        .WithMany("EnfantsCategorie")
                        .HasForeignKey("CategorieEnfantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Categorie", "ObjCategorieParent")
                        .WithMany("ParentsCategorie")
                        .HasForeignKey("CategorieParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ObjCategorieEnfant");

                    b.Navigation("ObjCategorieParent");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Stock", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Taille", "TailleStockee")
                        .WithMany("StocksTaille")
                        .HasForeignKey("NumTaille")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.VarianteProduit", "VarianteStockee")
                        .WithMany("StocksVariante")
                        .HasForeignKey("VarianteProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TailleStockee");

                    b.Navigation("VarianteStockee");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Utilisateur", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Adresse", "AdresseUtilisateur")
                        .WithMany()
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Adresse", null)
                        .WithMany("UtilisateursAdresse")
                        .HasForeignKey("AdresseId1");

                    b.HasOne("FIFA_API.Models.EntityFramework.Compte", "CompteUtilisateur")
                        .WithMany()
                        .HasForeignKey("CompteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Compte", null)
                        .WithOne("UtilisateurCompte")
                        .HasForeignKey("FIFA_API.Models.EntityFramework.Utilisateur", "CompteId1");

                    b.HasOne("FIFA_API.Models.EntityFramework.Activite", "ActiviteUtilisateur")
                        .WithMany("UtilisateursActivite")
                        .HasForeignKey("IdActivite");

                    b.HasOne("FIFA_API.Models.EntityFramework.Langue", "LangueUtilisateur")
                        .WithMany()
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Langue", null)
                        .WithMany("UtilisateursLangue")
                        .HasForeignKey("LangueNum");

                    b.HasOne("FIFA_API.Models.EntityFramework.Monnaie", null)
                        .WithMany("UtilisateursMonnaie")
                        .HasForeignKey("MonnaieId");

                    b.HasOne("FIFA_API.Models.EntityFramework.Monnaie", "MonnaieUtilisateur")
                        .WithMany()
                        .HasForeignKey("NumMonnaie")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Pays", "PaysFavoriNavigation")
                        .WithMany("UtilisateursFavorisantPays")
                        .HasForeignKey("PaysFavoriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pay_utl_pays_favori");

                    b.HasOne("FIFA_API.Models.EntityFramework.Pays", "PaysNaissanceNavigation")
                        .WithMany("UtilisateursNesPays")
                        .HasForeignKey("PaysNaissanceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pay_utl_pays_nassance");

                    b.Navigation("ActiviteUtilisateur");

                    b.Navigation("AdresseUtilisateur");

                    b.Navigation("CompteUtilisateur");

                    b.Navigation("LangueUtilisateur");

                    b.Navigation("MonnaieUtilisateur");

                    b.Navigation("PaysFavoriNavigation");

                    b.Navigation("PaysNaissanceNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.VarianteProduit", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Coloris", "ColorisVariante")
                        .WithMany()
                        .HasForeignKey("ColorisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Coloris", null)
                        .WithMany("VariantesColorises")
                        .HasForeignKey("ColorisId1");

                    b.HasOne("FIFA_API.Models.EntityFramework.Produit", "ProduitVariante")
                        .WithMany()
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Produit", null)
                        .WithMany("VariantesProduit")
                        .HasForeignKey("ProduitIdProduit");

                    b.Navigation("ColorisVariante");

                    b.Navigation("ProduitVariante");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Ville", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Pays", "PaysVille")
                        .WithMany()
                        .HasForeignKey("NumPays")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Pays", null)
                        .WithMany("VillesPays")
                        .HasForeignKey("PaysId");

                    b.Navigation("PaysVille");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Vote", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "JoueurVote")
                        .WithMany("VotesJoueur")
                        .HasForeignKey("IdJoueur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurVotant")
                        .WithMany()
                        .HasForeignKey("IdUtilisateur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Theme", "ThemeVote")
                        .WithMany()
                        .HasForeignKey("NumTheme")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FIFA_API.Models.EntityFramework.Theme", null)
                        .WithMany("VotesTheme")
                        .HasForeignKey("ThemeId");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", null)
                        .WithMany("VotesUtilisateur")
                        .HasForeignKey("UtilisateurId");

                    b.Navigation("JoueurVote");

                    b.Navigation("ThemeVote");

                    b.Navigation("UtilisateurVotant");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Action", b =>
                {
                    b.Navigation("ActionFormulaireAide");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Activite", b =>
                {
                    b.Navigation("UtilisateursActivite");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Adresse", b =>
                {
                    b.Navigation("CommandesAdresse");

                    b.Navigation("UtilisateursAdresse");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Album", b =>
                {
                    b.Navigation("CommentairesAlbum");

                    b.Navigation("LiensImages");

                    b.Navigation("LikesAlbums");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Article", b =>
                {
                    b.Navigation("CommentairesArticle");

                    b.Navigation("LiensJoueur");

                    b.Navigation("LiensMedias");

                    b.Navigation("LikesArticles");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Blog", b =>
                {
                    b.Navigation("CommentairesBlog");

                    b.Navigation("LiensImages");

                    b.Navigation("LikesBlogs");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Caracteristique", b =>
                {
                    b.Navigation("LienProduits");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Categorie", b =>
                {
                    b.Navigation("EnfantsCategorie");

                    b.Navigation("ParentsCategorie");

                    b.Navigation("ProduitsCategorie");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Club", b =>
                {
                    b.Navigation("JoueursClub");

                    b.Navigation("MatchesDomicile");

                    b.Navigation("MatchesExterieur");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Coloris", b =>
                {
                    b.Navigation("VariantesColorises");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Commande", b =>
                {
                    b.Navigation("LignesCommandes");

                    b.Navigation("ReglementsCommande");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Commentaire", b =>
                {
                    b.Navigation("CommentaireCommente")
                        .IsRequired();
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Competition", b =>
                {
                    b.Navigation("ProduitsCompetition");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Compte", b =>
                {
                    b.Navigation("UtilisateurCompte")
                        .IsRequired();
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Document", b =>
                {
                    b.Navigation("CommentairesDocument");

                    b.Navigation("LikesDocuments");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Genre", b =>
                {
                    b.Navigation("ProduitsGenre");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Image", b =>
                {
                    b.Navigation("LiensAlbums");

                    b.Navigation("LiensBlogs");

                    b.Navigation("LiensJoueurs");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Joueur", b =>
                {
                    b.Navigation("LienAnecdotes");

                    b.Navigation("LienTheme");

                    b.Navigation("LiensArticles");

                    b.Navigation("LiensImages");

                    b.Navigation("Matches_joue");

                    b.Navigation("RemportesJoueur");

                    b.Navigation("VotesJoueur");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Langue", b =>
                {
                    b.Navigation("UtilisateursLangue");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Livraison", b =>
                {
                    b.Navigation("CommandesLivraison");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Match", b =>
                {
                    b.Navigation("Matches_joue");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Media", b =>
                {
                    b.Navigation("ImagesMedia");

                    b.Navigation("LiensArticles");

                    b.Navigation("MediaFilm");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Monnaie", b =>
                {
                    b.Navigation("UtilisateursMonnaie");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Pays", b =>
                {
                    b.Navigation("ProduitsPays");

                    b.Navigation("UtilisateursFavorisantPays");

                    b.Navigation("UtilisateursNesPays");

                    b.Navigation("VillesPays");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Poste", b =>
                {
                    b.Navigation("JoueursPoste");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Produit", b =>
                {
                    b.Navigation("DevisProduit");

                    b.Navigation("LienCaracteristiques");

                    b.Navigation("ProduitSimilaireLienDeux");

                    b.Navigation("ProduitSimilaireLienUn");

                    b.Navigation("VariantesProduit");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Taille", b =>
                {
                    b.Navigation("LignesCommandes");

                    b.Navigation("StocksTaille");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Theme", b =>
                {
                    b.Navigation("LienJoueur");

                    b.Navigation("VotesTheme");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Trophee", b =>
                {
                    b.Navigation("RemportesTrophee");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Utilisateur", b =>
                {
                    b.Navigation("CommandesUtilisateur");

                    b.Navigation("CommentairesUtilisateur");

                    b.Navigation("FormulairesAideUtilisateur");

                    b.Navigation("InfosBancairesUtilisateur");

                    b.Navigation("LiensDevis");

                    b.Navigation("LikesAlbums");

                    b.Navigation("LikesArticles");

                    b.Navigation("LikesBlogs");

                    b.Navigation("LikesDocuments");

                    b.Navigation("VotesUtilisateur");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.VarianteProduit", b =>
                {
                    b.Navigation("LienImages");

                    b.Navigation("LignesCommandesVariante");

                    b.Navigation("StocksVariante");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Ville", b =>
                {
                    b.Navigation("JoueursVille");

                    b.Navigation("LiensAdresses");
                });
#pragma warning restore 612, 618
        }
    }
}
