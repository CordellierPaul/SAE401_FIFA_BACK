// <auto-generated />
using System;
using FIFA_API.Models.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FIFA_API.Migrations
{
    [DbContext(typeof(FifaDbContext))]
    partial class FifaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("FifaDB")
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Action", b =>
                {
                    b.Property<int>("ActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("act_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ActionId"));

                    b.Property<string>("TypeAction")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("act_type");

                    b.HasKey("ActionId")
                        .HasName("pk_act");

                    b.ToTable("t_e_action_act", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Activite", b =>
                {
                    b.Property<int>("ActiviteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ati_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ActiviteId"));

                    b.Property<string>("ActiviteNom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ati_nom");

                    b.HasKey("ActiviteId")
                        .HasName("pk_ati");

                    b.ToTable("t_e_activite_ati", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Adresse", b =>
                {
                    b.Property<int>("AdresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AdresseId"));

                    b.Property<string>("AdresseRue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("adr_rue");

                    b.Property<int>("VilleId")
                        .HasColumnType("integer")
                        .HasColumnName("vil_id");

                    b.HasKey("AdresseId")
                        .HasName("pk_adr");

                    b.HasIndex("VilleId");

                    b.ToTable("t_e_adresse_adr", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("alb_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AlbumId"));

                    b.Property<string>("AlbumResume")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("alb_resume");

                    b.Property<string>("AlbumTitre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("alb_titre");

                    b.Property<DateTime>("DateHeure")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("alb_date_heure")
                        .HasDefaultValueSql("now()");

                    b.HasKey("AlbumId")
                        .HasName("pk_alb");

                    b.ToTable("t_e_album_alb", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.AlbumImage", b =>
                {
                    b.Property<int>("AlbumId")
                        .HasColumnType("integer")
                        .HasColumnName("alb_id");

                    b.Property<int>("ImageId")
                        .HasColumnType("integer")
                        .HasColumnName("img_id");

                    b.HasKey("AlbumId", "ImageId")
                        .HasName("pk_ali");

                    b.HasIndex("ImageId");

                    b.ToTable("t_j_albumimage_ali", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Anecdote", b =>
                {
                    b.Property<int>("AnecdoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("anc_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AnecdoteId"));

                    b.Property<string>("AnecdoteReponse")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("anc_reponse");

                    b.Property<int>("JoueurId")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("anc_question");

                    b.HasKey("AnecdoteId")
                        .HasName("pk_anc");

                    b.HasIndex("JoueurId");

                    b.ToTable("t_e_anecdote_anc", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("art_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ArticleId"));

                    b.Property<DateTime>("ArticleDateHeure")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("art_dateheure");

                    b.Property<string>("ArticleResume")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("art_resume");

                    b.Property<string>("ArticleTexte")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("art_texte");

                    b.Property<string>("ArticleTitre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("art_titre");

                    b.HasKey("ArticleId")
                        .HasName("pk_art");

                    b.ToTable("t_e_article_art", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ArticleJoueur", b =>
                {
                    b.Property<int>("ArticleId")
                        .HasColumnType("integer")
                        .HasColumnName("art_id");

                    b.Property<int>("JoueurId")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.HasKey("ArticleId", "JoueurId")
                        .HasName("pk_atj");

                    b.HasIndex("JoueurId");

                    b.ToTable("t_j_articlejoueur_atj", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ArticleMedia", b =>
                {
                    b.Property<int>("ArticleId")
                        .HasColumnType("integer")
                        .HasColumnName("art_id");

                    b.Property<int>("MediaId")
                        .HasColumnType("integer")
                        .HasColumnName("med_id");

                    b.HasKey("ArticleId", "MediaId")
                        .HasName("pk_atm");

                    b.HasIndex("MediaId");

                    b.ToTable("t_j_articlemedia_atm", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("blg_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BlogId"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("integer")
                        .HasColumnName("art_id");

                    b.Property<DateTime>("BlogDateHeure")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("blg_dateheure");

                    b.Property<string>("BlogDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("blg_description");

                    b.Property<string>("BlogResume")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("blg_resume");

                    b.Property<string>("BlogTitre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("blg_titre");

                    b.HasKey("BlogId")
                        .HasName("pk_blg");

                    b.HasIndex("ArticleId");

                    b.ToTable("t_e_blog_blg", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.BlogImage", b =>
                {
                    b.Property<int>("BlogId")
                        .HasColumnType("integer")
                        .HasColumnName("blg_id");

                    b.Property<int>("ImageId")
                        .HasColumnType("integer")
                        .HasColumnName("img_id");

                    b.HasKey("BlogId", "ImageId")
                        .HasName("pk_bli");

                    b.HasIndex("ImageId");

                    b.ToTable("t_j_blogimage_bli", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Caracteristique", b =>
                {
                    b.Property<int>("CaracteristiqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("car_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CaracteristiqueId"));

                    b.Property<string>("CaracteristiqueNom")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("car_nom");

                    b.HasKey("CaracteristiqueId")
                        .HasName("pk_car");

                    b.ToTable("t_e_caracteristique_car", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.CaracteristiqueProduit", b =>
                {
                    b.Property<int>("CaracteristiqueId")
                        .HasColumnType("integer")
                        .HasColumnName("car_id");

                    b.Property<int>("ProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("pro_id");

                    b.HasKey("CaracteristiqueId", "ProduitId")
                        .HasName("pk_cpd");

                    b.HasIndex("ProduitId");

                    b.ToTable("t_j_caracteristique_produit_cpd", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Categorie", b =>
                {
                    b.Property<int>("CategorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cat_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategorieId"));

                    b.Property<string>("CategorieNom")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("cat_nom");

                    b.HasKey("CategorieId")
                        .HasName("pk_cat");

                    b.ToTable("t_e_categorie_cat", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Club", b =>
                {
                    b.Property<int>("ClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClubId"));

                    b.Property<string>("ClubInitiales")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("clb_initiales");

                    b.Property<string>("ClubNom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("clb_nom");

                    b.HasKey("ClubId")
                        .HasName("pk_clb");

                    b.ToTable("t_e_club_clb", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Coloris", b =>
                {
                    b.Property<int>("ColorisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ColorisId"));

                    b.Property<string>("ColorisNom")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("clr_nom");

                    b.HasKey("ColorisId")
                        .HasName("pk_clr");

                    b.ToTable("t_e_coloris_clr", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Commande", b =>
                {
                    b.Property<int>("CommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cmd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CommandeId"));

                    b.Property<int>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.Property<DateTime>("CommandeDateCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cmd_datecommande")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime?>("CommandeDateLivraison")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cmd_datelivraison");

                    b.Property<bool>("CommandeDomicile")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("cmd_domicile");

                    b.Property<string>("CommandeEtatCommande")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("cmd_etatcommande");

                    b.Property<decimal>("CommandePrix")
                        .HasColumnType("numeric")
                        .HasColumnName("cmd_prix");

                    b.Property<int>("LivraisonId")
                        .HasColumnType("integer")
                        .HasColumnName("liv_id");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.HasKey("CommandeId")
                        .HasName("pk_cmd");

                    b.HasIndex("AdresseId");

                    b.HasIndex("LivraisonId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_e_commande_cmd", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Commentaire", b =>
                {
                    b.Property<int>("CommentaireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("com_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CommentaireId"));

                    b.Property<int?>("AlbumId")
                        .HasColumnType("integer")
                        .HasColumnName("alb_id");

                    b.Property<int?>("ArticleId")
                        .HasColumnType("integer")
                        .HasColumnName("art_id");

                    b.Property<int?>("BlogId")
                        .HasColumnType("integer")
                        .HasColumnName("blg_id");

                    b.Property<DateTime>("CommentaireDateHeure")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("com_dateheure");

                    b.Property<int?>("CommentaireIdCommentaire")
                        .HasColumnType("integer")
                        .HasColumnName("com_com_id");

                    b.Property<string>("CommentaireTexte")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("com_texte");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("integer")
                        .HasColumnName("doc_id");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.HasKey("CommentaireId")
                        .HasName("pk_com");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("BlogId");

                    b.HasIndex("CommentaireIdCommentaire")
                        .IsUnique();

                    b.HasIndex("DocumentId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_e_commentaire_com", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Competition", b =>
                {
                    b.Property<int>("CompetitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cpn_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CompetitionId"));

                    b.Property<string>("CompetitionNom")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("cpn_nom");

                    b.HasKey("CompetitionId")
                        .HasName("pk_cpn");

                    b.ToTable("t_e_competition_cpn", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Compte", b =>
                {
                    b.Property<int>("CompteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cpt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CompteId"));

                    b.Property<bool>("CompteAnnonces")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("cpt_annonces");

                    b.Property<DateTime>("CompteDateConnexion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cpt_dateconnexion")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("CompteEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cpt_email");

                    b.Property<string>("CompteMdp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("cpt_mdp");

                    b.Property<string>("Comptelogin")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cpt_login");

                    b.Property<int>("TypeCompte")
                        .HasColumnType("integer")
                        .HasColumnName("cpt_typecompte");

                    b.HasKey("CompteId")
                        .HasName("pk_cpt");

                    b.HasIndex("CompteEmail")
                        .IsUnique();

                    b.ToTable("t_e_compte_cpt", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Devis", b =>
                {
                    b.Property<int>("DevisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("dev_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DevisId"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("dev_message");

                    b.Property<int>("ProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("pro_id");

                    b.Property<string>("Sujet")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("dev_sujet");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.HasKey("DevisId")
                        .HasName("pk_dev");

                    b.HasIndex("ProduitId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_e_devis_dev", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("doc_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DocumentId"));

                    b.Property<DateTime>("DocumentDateHeure")
                        .HasColumnType("date")
                        .HasColumnName("doc_dateheure");

                    b.Property<string>("DocumentLienPdf")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("doc_lienpdf");

                    b.Property<string>("DocumentResume")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("doc_resume");

                    b.Property<string>("DocumentTitre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("doc_titre");

                    b.HasKey("DocumentId")
                        .HasName("pk_doc");

                    b.HasIndex(new[] { "DocumentLienPdf" }, "uq_doc_lienpdf")
                        .IsUnique();

                    b.ToTable("t_e_document_doc", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Film", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("flm_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FilmId"));

                    b.Property<int>("MediaId")
                        .HasColumnType("integer")
                        .HasColumnName("med_id");

                    b.HasKey("FilmId")
                        .HasName("pk_flm");

                    b.HasIndex("MediaId");

                    b.ToTable("t_e_film_flm", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.FormulaireAide", b =>
                {
                    b.Property<int>("FormulaireAideId")
                        .HasColumnType("integer")
                        .HasColumnName("foa_id");

                    b.Property<int>("ActionId")
                        .HasColumnType("integer")
                        .HasColumnName("act_id");

                    b.Property<string>("FormulaireAideTelephone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("foa_telephone");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("foa_question");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.Property<string>("UtilisateurNom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("foa_nom");

                    b.HasKey("FormulaireAideId")
                        .HasName("pk_foa");

                    b.HasIndex("ActionId");

                    b.ToTable("t_e_formulaireaide_foa", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("gen_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GenreId"));

                    b.Property<string>("GenreNom")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("gen_nom");

                    b.HasKey("GenreId")
                        .HasName("pk_gen");

                    b.ToTable("t_e_genre_gen", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .HasColumnType("integer")
                        .HasColumnName("img_id");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img_url");

                    b.HasKey("ImageId")
                        .HasName("pk_img");

                    b.ToTable("t_e_image_img", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ImageJoueur", b =>
                {
                    b.Property<int>("ImageId")
                        .HasColumnType("integer")
                        .HasColumnName("img_id");

                    b.Property<int>("JoueurId")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.HasKey("ImageId", "JoueurId")
                        .HasName("pk_imj");

                    b.HasIndex("JoueurId");

                    b.ToTable("t_j_image_joueur_imj", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ImageVariante", b =>
                {
                    b.Property<int>("ImageId")
                        .HasColumnType("integer")
                        .HasColumnName("img_id");

                    b.Property<int>("VarianteProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("vpd_id");

                    b.HasKey("ImageId", "VarianteProduitId")
                        .HasName("pk_imv");

                    b.HasIndex("VarianteProduitId");

                    b.ToTable("t_j_imagevariante_imv", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.InfosBancaires", b =>
                {
                    b.Property<int>("InfosBancairesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("inb_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InfosBancairesId"));

                    b.Property<string>("AnneeExpiration")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("inb_anneeexpiration");

                    b.Property<string>("InfosBancaireMoisExpiration")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("inb_moisexpiration");

                    b.Property<string>("InfosBancaireNomCarte")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("inb_nomcarte");

                    b.Property<string>("InfosBancaireNumCarte")
                        .IsRequired()
                        .HasMaxLength(228)
                        .HasColumnType("character varying(228)")
                        .HasColumnName("inb_numcarte");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.HasKey("InfosBancairesId")
                        .HasName("pk_inb");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_e_infos_bancaires_inb", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Joueur", b =>
                {
                    b.Property<int>("JoueurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("JoueurId"));

                    b.Property<int?>("ClubId")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    b.Property<DateTime>("JoueurDateNaissance")
                        .HasColumnType("date")
                        .HasColumnName("jou_datenaissance");

                    b.Property<string>("JoueurDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("jou_description");

                    b.Property<string>("JoueurNom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("jou_nom");

                    b.Property<string>("JoueurPied")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("jou_pied");

                    b.Property<decimal>("JoueurPoids")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("jou_poids");

                    b.Property<string>("JoueurPrenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("jou_prenom");

                    b.Property<int>("JoueurTaille")
                        .HasColumnType("integer")
                        .HasColumnName("jou_taille");

                    b.Property<int>("PosteId")
                        .HasColumnType("integer")
                        .HasColumnName("pos_id");

                    b.Property<int>("VilleId")
                        .HasColumnType("integer")
                        .HasColumnName("vil_id");

                    b.HasKey("JoueurId")
                        .HasName("pk_jou");

                    b.HasIndex("ClubId");

                    b.HasIndex("PosteId");

                    b.HasIndex("VilleId");

                    b.ToTable("t_e_joueur_jou", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.JoueurTheme", b =>
                {
                    b.Property<int>("ThemeId")
                        .HasColumnType("integer")
                        .HasColumnName("the_id");

                    b.Property<int>("JoueurId")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.HasKey("ThemeId", "JoueurId")
                        .HasName("pk_jot");

                    b.HasIndex("JoueurId");

                    b.ToTable("t_j_joueur_theme_jot", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Langue", b =>
                {
                    b.Property<int>("LangueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("lng_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LangueId"));

                    b.Property<string>("LangueNom")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("lng_nom");

                    b.HasKey("LangueId")
                        .HasName("pk_lng");

                    b.ToTable("t_e_langue_lng", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LigneCommande", b =>
                {
                    b.Property<int>("LigneCommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("lcd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LigneCommandeId"));

                    b.Property<int>("CommandeId")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_id");

                    b.Property<double>("LigneCommandePrix")
                        .HasColumnType("double precision")
                        .HasColumnName("lcd_prix");

                    b.Property<int>("LigneCommandeQuantite")
                        .HasColumnType("integer")
                        .HasColumnName("lcd_quantite");

                    b.Property<int>("NumeroLigneCommande")
                        .HasColumnType("integer")
                        .HasColumnName("lcd_num");

                    b.Property<int>("TailleId")
                        .HasColumnType("integer")
                        .HasColumnName("tai_id");

                    b.Property<int>("VarianteProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("vpd_id");

                    b.HasKey("LigneCommandeId")
                        .HasName("pk_lcd");

                    b.HasIndex("CommandeId");

                    b.HasIndex("TailleId");

                    b.HasIndex("VarianteProduitId");

                    b.ToTable("t_e_ligne_commande_lcd", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeAlbum", b =>
                {
                    b.Property<int>("AlbumId")
                        .HasColumnType("integer")
                        .HasColumnName("alb_id");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.HasKey("AlbumId", "UtilisateurId")
                        .HasName("pk_lab");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_j_like_album_lab", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeArticle", b =>
                {
                    b.Property<int>("ArticleId")
                        .HasColumnType("integer")
                        .HasColumnName("art_id");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.HasKey("ArticleId", "UtilisateurId")
                        .HasName("pk_lar");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_j_like_article_lar", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeBlog", b =>
                {
                    b.Property<int>("BlogId")
                        .HasColumnType("integer")
                        .HasColumnName("blg_id");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.HasKey("BlogId", "UtilisateurId")
                        .HasName("pk_lbg");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_j_like_blog_lbg", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeDocument", b =>
                {
                    b.Property<int>("DocumentId")
                        .HasColumnType("integer")
                        .HasColumnName("doc_id");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.HasKey("DocumentId", "UtilisateurId")
                        .HasName("pk_ldc");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("t_j_like_document_ldc", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Livraison", b =>
                {
                    b.Property<int>("LivraisonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("liv_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LivraisonId"));

                    b.Property<double>("LivraisonPrix")
                        .HasColumnType("double precision")
                        .HasColumnName("liv_prix");

                    b.Property<string>("LivraisonType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("liv_type");

                    b.HasKey("LivraisonId")
                        .HasName("pk_liv");

                    b.ToTable("t_e_livraison_liv", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mch_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MatchId"));

                    b.Property<int>("ClubDomicileId")
                        .HasColumnType("integer")
                        .HasColumnName("clb_domicileid");

                    b.Property<int>("ClubExterieurId")
                        .HasColumnType("integer")
                        .HasColumnName("clb_exterieurid");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("date")
                        .HasColumnName("mch_datematch");

                    b.Property<int>("MatchScoreDomicile")
                        .HasColumnType("integer")
                        .HasColumnName("mch_score_domicile");

                    b.Property<int>("MatchScoreExterieur")
                        .HasColumnType("integer")
                        .HasColumnName("mch_score_exterieur");

                    b.HasKey("MatchId")
                        .HasName("pk_mch");

                    b.HasIndex("ClubDomicileId");

                    b.HasIndex("ClubExterieurId");

                    b.ToTable("t_e_match_mch", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.MatchJoue", b =>
                {
                    b.Property<int>("JoueurId")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.Property<int>("MatchId")
                        .HasColumnType("integer")
                        .HasColumnName("mch_id");

                    b.Property<int>("MatchJoueNbButs")
                        .HasColumnType("integer")
                        .HasColumnName("mtj_nbbuts");

                    b.Property<int>("MatchJoueNbMinutes")
                        .HasColumnType("integer")
                        .HasColumnName("mtj_nbminutes");

                    b.Property<string>("MatchJoueSelection")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("mtj_selection");

                    b.Property<string>("MatchJoueTitularisation")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("mtj_titularisation");

                    b.HasKey("JoueurId", "MatchId")
                        .HasName("pk_mtj");

                    b.HasIndex("MatchId");

                    b.ToTable("t_j_match_joue_mtj", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Media", b =>
                {
                    b.Property<int>("MediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("med_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MediaId"));

                    b.Property<string>("MediaUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("med_url");

                    b.HasKey("MediaId")
                        .HasName("pk_med");

                    b.ToTable("t_e_media_med", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Monnaie", b =>
                {
                    b.Property<int>("MonnaieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mon_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MonnaieId"));

                    b.Property<string>("MonnaieNom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("mon_nom");

                    b.Property<string>("MonnaieSymbole")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("mon_symbole");

                    b.HasKey("MonnaieId")
                        .HasName("pk_mon");

                    b.ToTable("t_e_monnaie_mon", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Pays", b =>
                {
                    b.Property<int>("PaysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pay_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PaysId"));

                    b.Property<string>("PaysNom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("pay_nom");

                    b.HasKey("PaysId")
                        .HasName("pk_pay");

                    b.ToTable("t_e_pays_pay", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Poste", b =>
                {
                    b.Property<int>("PosteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pos_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PosteId"));

                    b.Property<string>("PosteLibelle")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("pos_libelle");

                    b.HasKey("PosteId")
                        .HasName("pk_pos");

                    b.ToTable("t_e_poste_pos", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Produit", b =>
                {
                    b.Property<int>("ProduitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pro_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProduitId"));

                    b.Property<int>("CategorieId")
                        .HasColumnType("integer")
                        .HasColumnName("cat_id");

                    b.Property<int?>("CompetitionId")
                        .HasColumnType("integer")
                        .HasColumnName("comp_id");

                    b.Property<int>("GenreId")
                        .HasColumnType("integer")
                        .HasColumnName("gen_id");

                    b.Property<int?>("PaysId")
                        .HasColumnType("integer")
                        .HasColumnName("pay_id");

                    b.Property<string>("ProduitDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("pro_description");

                    b.Property<string>("ProduitNom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("pro_nom");

                    b.HasKey("ProduitId")
                        .HasName("pk_pro");

                    b.HasIndex("CategorieId");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("GenreId");

                    b.HasIndex("PaysId");

                    b.ToTable("t_e_produit_pro", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ProduitSimilaire", b =>
                {
                    b.Property<int>("ProduitUnId")
                        .HasColumnType("integer")
                        .HasColumnName("pro_un_id");

                    b.Property<int>("ProduitDeuxId")
                        .HasColumnType("integer")
                        .HasColumnName("pro_deux_id");

                    b.HasKey("ProduitUnId", "ProduitDeuxId")
                        .HasName("pk_prs");

                    b.HasIndex("ProduitDeuxId");

                    b.ToTable("t_j_produit_similaire_prs", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Reglement", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tra_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransactionId"));

                    b.Property<int>("CommandeId")
                        .HasColumnType("integer")
                        .HasColumnName("com_id");

                    b.Property<DateTime>("ReglementDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("reg_date")
                        .HasDefaultValueSql("now()");

                    b.Property<decimal>("ReglementMontant")
                        .HasColumnType("numeric")
                        .HasColumnName("reg_montant");

                    b.HasKey("TransactionId")
                        .HasName("pk_reg");

                    b.HasIndex("CommandeId");

                    b.ToTable("t_e_reglement_reg", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Remporte", b =>
                {
                    b.Property<int>("JoueurId")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.Property<int>("TropheeId")
                        .HasColumnType("integer")
                        .HasColumnName("tro_id");

                    b.Property<char>("RemporteAnnee")
                        .HasColumnType("char(4)")
                        .HasColumnName("rem_annee");

                    b.HasKey("JoueurId", "TropheeId", "RemporteAnnee")
                        .HasName("pk_rem");

                    b.HasIndex("TropheeId");

                    b.ToTable("t_j_remporte_rem", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.SousCategorie", b =>
                {
                    b.Property<int>("CategorieParentId")
                        .HasColumnType("integer")
                        .HasColumnName("cat_parent");

                    b.Property<int>("CategorieEnfantId")
                        .HasColumnType("integer")
                        .HasColumnName("cat_enfant");

                    b.HasKey("CategorieParentId", "CategorieEnfantId")
                        .HasName("pk_sct");

                    b.HasIndex("CategorieEnfantId");

                    b.ToTable("t_j_sous_categorie_sct", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("stk_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StockId"));

                    b.Property<int>("QuantiteStockee")
                        .HasColumnType("integer")
                        .HasColumnName("stk_quantitestockee");

                    b.Property<int>("TailleId")
                        .HasColumnType("integer")
                        .HasColumnName("tai_id");

                    b.Property<int>("VarianteProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("vpd_id");

                    b.HasKey("StockId")
                        .HasName("pk_stk");

                    b.HasIndex("TailleId");

                    b.HasIndex("VarianteProduitId");

                    b.ToTable("t_e_stock_stk", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Taille", b =>
                {
                    b.Property<int>("TailleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tai_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TailleId"));

                    b.Property<string>("TailleLibelle")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("tai_libelle");

                    b.HasKey("TailleId")
                        .HasName("pk_tai");

                    b.ToTable("t_e_taille_tai", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Theme", b =>
                {
                    b.Property<int>("ThemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("the_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ThemeId"));

                    b.Property<string>("ThemeLibelle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("the_libelle");

                    b.HasKey("ThemeId")
                        .HasName("pk_the");

                    b.ToTable("t_e_theme_the", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Trophee", b =>
                {
                    b.Property<int>("TropheeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tro_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TropheeId"));

                    b.Property<string>("TropheeNom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("tro_nom");

                    b.HasKey("TropheeId")
                        .HasName("pk_tro");

                    b.ToTable("t_e_trophee_tro", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Utilisateur", b =>
                {
                    b.Property<int>("UtilisateurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UtilisateurId"));

                    b.Property<int?>("ActiviteId")
                        .HasColumnType("integer")
                        .HasColumnName("act_id");

                    b.Property<int?>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    b.Property<int?>("CompteId")
                        .HasColumnType("integer")
                        .HasColumnName("com_id");

                    b.Property<int>("LangueId")
                        .HasColumnType("integer")
                        .HasColumnName("lan_id");

                    b.Property<int>("MonnaieId")
                        .HasColumnType("integer")
                        .HasColumnName("mon_id");

                    b.Property<int?>("PaysFavoriId")
                        .HasColumnType("integer")
                        .HasColumnName("pay_paysfavori_id");

                    b.Property<int>("PaysNaissanceId")
                        .HasColumnType("integer")
                        .HasColumnName("pay_paysnaissance_id");

                    b.Property<string>("PrenomUtilisateur")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("utl_prenom");

                    b.Property<string>("SocieteId")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("soc_id");

                    b.Property<DateTime>("UtilisateurDateNaissance")
                        .HasColumnType("date")
                        .HasColumnName("utl_datenaissance");

                    b.Property<string>("UtilisateurNomAcheteur")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("utl_nomacheteur");

                    b.Property<string>("UtilisateurNumTva")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("utl_numtva");

                    b.Property<string>("UtilisateurTelAcheteur")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("utl_telacheteur");

                    b.HasKey("UtilisateurId")
                        .HasName("pk_utl");

                    b.HasIndex("ActiviteId");

                    b.HasIndex("AdresseId");

                    b.HasIndex("LangueId");

                    b.HasIndex("MonnaieId");

                    b.HasIndex("PaysFavoriId");

                    b.HasIndex("PaysNaissanceId");

                    b.HasIndex(new[] { "CompteId" }, "uq_utl_idcompte")
                        .IsUnique();

                    b.HasIndex(new[] { "SocieteId" }, "uq_utl_numSociete")
                        .IsUnique();

                    b.HasIndex(new[] { "UtilisateurNumTva" }, "uq_utl_numtva")
                        .IsUnique();

                    b.HasIndex(new[] { "UtilisateurTelAcheteur" }, "uq_utl_telacheteur")
                        .IsUnique();

                    b.ToTable("t_e_utilisateur_utl", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.VarianteProduit", b =>
                {
                    b.Property<int>("VarianteProduitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vpd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VarianteProduitId"));

                    b.Property<int>("ColorisId")
                        .HasColumnType("integer")
                        .HasColumnName("clr_id");

                    b.Property<int>("ProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("pro_id");

                    b.Property<decimal>("VarianteProduitPrix")
                        .HasColumnType("decimal")
                        .HasColumnName("vpd_prix");

                    b.Property<decimal>("VarianteProduitPromo")
                        .HasColumnType("decimal")
                        .HasColumnName("vpd_promo");

                    b.HasKey("VarianteProduitId")
                        .HasName("pk_vpd");

                    b.HasIndex("ColorisId");

                    b.HasIndex("ProduitId");

                    b.ToTable("t_e_variante_produit_vpd", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Ville", b =>
                {
                    b.Property<int>("VilleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vil_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VilleId"));

                    b.Property<int>("PaysId")
                        .HasColumnType("integer")
                        .HasColumnName("pay_id");

                    b.Property<char>("VilleCodePostal")
                        .HasColumnType("char(5)")
                        .HasColumnName("vil_codepostal");

                    b.Property<string>("VilleNom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("vil_nom");

                    b.HasKey("VilleId")
                        .HasName("pk_vil");

                    b.HasIndex("PaysId");

                    b.ToTable("t_e_ville_vil", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Vote", b =>
                {
                    b.Property<int>("UtilisateurId")
                        .HasColumnType("integer")
                        .HasColumnName("utl_id");

                    b.Property<int>("ThemeId")
                        .HasColumnType("integer")
                        .HasColumnName("the_id");

                    b.Property<int>("JoueurId")
                        .HasColumnType("integer")
                        .HasColumnName("jou_id");

                    b.Property<int>("VoteNote")
                        .HasColumnType("integer")
                        .HasColumnName("vot_note");

                    b.HasKey("UtilisateurId", "ThemeId", "JoueurId")
                        .HasName("pk_vot");

                    b.HasIndex("JoueurId");

                    b.HasIndex("ThemeId");

                    b.ToTable("t_e_vote_vot", "FifaDB");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Adresse", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Ville", "LienVille")
                        .WithMany("LiensAdresses")
                        .HasForeignKey("VilleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_vil_adr");

                    b.Navigation("LienVille");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.AlbumImage", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Album", "AlbumNavigation")
                        .WithMany("LiensImages")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ali_alb");

                    b.HasOne("FIFA_API.Models.EntityFramework.Image", "ImageNavigation")
                        .WithMany("LiensAlbums")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ali_img");

                    b.Navigation("AlbumNavigation");

                    b.Navigation("ImageNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Anecdote", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "JoueurNavigation")
                        .WithMany("LienAnecdotes")
                        .HasForeignKey("JoueurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_anc_jou");

                    b.Navigation("JoueurNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ArticleJoueur", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Article", "ArticleNavigation")
                        .WithMany("LiensJoueur")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_atj_art");

                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "JoueurNavigation")
                        .WithMany("LiensArticles")
                        .HasForeignKey("JoueurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_atj_jou");

                    b.Navigation("ArticleNavigation");

                    b.Navigation("JoueurNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ArticleMedia", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Article", "ArticleNavigation")
                        .WithMany("LiensMedias")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_atm_art");

                    b.HasOne("FIFA_API.Models.EntityFramework.Media", "MediaNavigation")
                        .WithMany("LiensArticles")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_atm_med");

                    b.Navigation("ArticleNavigation");

                    b.Navigation("MediaNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Blog", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Article", "ArticleNavigation")
                        .WithMany("BlogsArticle")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_blg_art");

                    b.Navigation("ArticleNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.BlogImage", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Blog", "BlogNavigation")
                        .WithMany("LiensImages")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_bli_blg");

                    b.HasOne("FIFA_API.Models.EntityFramework.Image", "ImageNavigation")
                        .WithMany("LiensBlogs")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_bli_img");

                    b.Navigation("BlogNavigation");

                    b.Navigation("ImageNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.CaracteristiqueProduit", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Caracteristique", "CaracteristiqueNavigation")
                        .WithMany("LienProduits")
                        .HasForeignKey("CaracteristiqueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cpd_car");

                    b.HasOne("FIFA_API.Models.EntityFramework.Produit", "ProduitNavigation")
                        .WithMany("LienCaracteristiques")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cpd_pro");

                    b.Navigation("CaracteristiqueNavigation");

                    b.Navigation("ProduitNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Commande", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Adresse", "AdresseCommande")
                        .WithMany("CommandesAdresse")
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_cmd_adr");

                    b.HasOne("FIFA_API.Models.EntityFramework.Livraison", "LivraisonCommande")
                        .WithMany("CommandesLivraison")
                        .HasForeignKey("LivraisonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_cmd_liv");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurCommandant")
                        .WithMany("CommandesUtilisateur")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_cmd_utl");

                    b.Navigation("AdresseCommande");

                    b.Navigation("LivraisonCommande");

                    b.Navigation("UtilisateurCommandant");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Commentaire", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Album", "AlbumCommente")
                        .WithMany("CommentairesAlbum")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_com_alb");

                    b.HasOne("FIFA_API.Models.EntityFramework.Article", "ArticleCommente")
                        .WithMany("CommentairesArticle")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_com_art");

                    b.HasOne("FIFA_API.Models.EntityFramework.Blog", "BlogCommente")
                        .WithMany("CommentairesBlog")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_com_blg");

                    b.HasOne("FIFA_API.Models.EntityFramework.Commentaire", "CommentaireCommente")
                        .WithOne("CommenteCommentaire")
                        .HasForeignKey("FIFA_API.Models.EntityFramework.Commentaire", "CommentaireIdCommentaire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_com_com");

                    b.HasOne("FIFA_API.Models.EntityFramework.Document", "DocumentCommente")
                        .WithMany("CommentairesDocument")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_com_doc");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurCommentant")
                        .WithMany("CommentairesUtilisateur")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_com_utl");

                    b.Navigation("AlbumCommente");

                    b.Navigation("ArticleCommente");

                    b.Navigation("BlogCommente");

                    b.Navigation("CommentaireCommente");

                    b.Navigation("DocumentCommente");

                    b.Navigation("UtilisateurCommentant");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Devis", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Produit", "ProduitDevis")
                        .WithMany("DevisProduit")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_dev_pro");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurDevis")
                        .WithMany("LiensDevis")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_dev_utl");

                    b.Navigation("ProduitDevis");

                    b.Navigation("UtilisateurDevis");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Film", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Media", "FilmMedia")
                        .WithMany("MediaFilm")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_flm_med");

                    b.Navigation("FilmMedia");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.FormulaireAide", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Action", "FormulaireAction")
                        .WithMany("ActionFormulaireAide")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_foa_act");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurDuFormulaire")
                        .WithMany("FormulairesAideUtilisateur")
                        .HasForeignKey("FormulaireAideId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_foa_utl");

                    b.Navigation("FormulaireAction");

                    b.Navigation("UtilisateurDuFormulaire");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Image", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Media", "MediaImage")
                        .WithMany("ImagesMedia")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_img_med");

                    b.Navigation("MediaImage");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ImageJoueur", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Image", "ImageNavigation")
                        .WithMany("LiensJoueurs")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_imj_img");

                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "JoueurNavigation")
                        .WithMany("LiensImages")
                        .HasForeignKey("JoueurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_imj_jou");

                    b.Navigation("ImageNavigation");

                    b.Navigation("JoueurNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ImageVariante", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Image", "ImageNavigation")
                        .WithMany("ImagesVariante")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_imv_img");

                    b.HasOne("FIFA_API.Models.EntityFramework.VarianteProduit", "VarianteProduitNavigation")
                        .WithMany("LienImages")
                        .HasForeignKey("VarianteProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_imv_vpd");

                    b.Navigation("ImageNavigation");

                    b.Navigation("VarianteProduitNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.InfosBancaires", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurInfoBc")
                        .WithMany("InfosBancairesUtilisateur")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_inb_utl");

                    b.Navigation("UtilisateurInfoBc");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Joueur", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Club", "ClubJoueur")
                        .WithMany("JoueursClub")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_jou_clb");

                    b.HasOne("FIFA_API.Models.EntityFramework.Poste", "PosteJoueur")
                        .WithMany("JoueursPoste")
                        .HasForeignKey("PosteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_jou_pos");

                    b.HasOne("FIFA_API.Models.EntityFramework.Ville", "VilleJoueur")
                        .WithMany("JoueursVille")
                        .HasForeignKey("VilleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_jou_vil");

                    b.Navigation("ClubJoueur");

                    b.Navigation("PosteJoueur");

                    b.Navigation("VilleJoueur");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.JoueurTheme", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "JoueurNavigation")
                        .WithMany("LienTheme")
                        .HasForeignKey("JoueurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_jot_jou");

                    b.HasOne("FIFA_API.Models.EntityFramework.Theme", "ThemeNavigation")
                        .WithMany("LienJoueur")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_jot_the");

                    b.Navigation("JoueurNavigation");

                    b.Navigation("ThemeNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LigneCommande", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Commande", "CommandeNavigation")
                        .WithMany("LignesCommandes")
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lcd_cmd");

                    b.HasOne("FIFA_API.Models.EntityFramework.Taille", "TailleNavigation")
                        .WithMany("LignesCommandes")
                        .HasForeignKey("TailleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lcd_tai");

                    b.HasOne("FIFA_API.Models.EntityFramework.VarianteProduit", "VarianteProduitNavigation")
                        .WithMany("LignesCommandesVariante")
                        .HasForeignKey("VarianteProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lcd_vpd");

                    b.Navigation("CommandeNavigation");

                    b.Navigation("TailleNavigation");

                    b.Navigation("VarianteProduitNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeAlbum", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Album", "AlbumNavigation")
                        .WithMany("LikesAlbums")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lab_alb");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurNavigation")
                        .WithMany("LikesAlbums")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lab_utl");

                    b.Navigation("AlbumNavigation");

                    b.Navigation("UtilisateurNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeArticle", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Article", "ArticleNavigation")
                        .WithMany("LikesArticles")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lar_art");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurNavigation")
                        .WithMany("LikesArticles")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lar_utl");

                    b.Navigation("ArticleNavigation");

                    b.Navigation("UtilisateurNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeBlog", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Blog", "BlogNavigation")
                        .WithMany("LikesBlogs")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lbg_blg");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurNavigation")
                        .WithMany("LikesBlogs")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lbg_utl");

                    b.Navigation("BlogNavigation");

                    b.Navigation("UtilisateurNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.LikeDocument", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Document", "DocumentNavigation")
                        .WithMany("LikesDocuments")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ldc_doc");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurNavigation")
                        .WithMany("LikesDocuments")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ldc_utl");

                    b.Navigation("DocumentNavigation");

                    b.Navigation("UtilisateurNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Match", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Club", "ClubDomicileMatch")
                        .WithMany("MatchesDomicile")
                        .HasForeignKey("ClubDomicileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_mchdom_clb");

                    b.HasOne("FIFA_API.Models.EntityFramework.Club", "ClubExterieurMatch")
                        .WithMany("MatchesExterieur")
                        .HasForeignKey("ClubExterieurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_mchext_clb");

                    b.Navigation("ClubDomicileMatch");

                    b.Navigation("ClubExterieurMatch");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.MatchJoue", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "JoueurNavigation")
                        .WithMany("Matches_joue")
                        .HasForeignKey("JoueurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_mtj_jou");

                    b.HasOne("FIFA_API.Models.EntityFramework.Match", "MatchNavigation")
                        .WithMany("Matches_joue")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_mtj_mch");

                    b.Navigation("JoueurNavigation");

                    b.Navigation("MatchNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Produit", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Categorie", "CategorieNavigation")
                        .WithMany("ProduitsCategorie")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pro_cat");

                    b.HasOne("FIFA_API.Models.EntityFramework.Competition", "CompetitionProduit")
                        .WithMany("ProduitsCompetition")
                        .HasForeignKey("CompetitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_pro_cpn");

                    b.HasOne("FIFA_API.Models.EntityFramework.Genre", "GenreProduit")
                        .WithMany("ProduitsGenre")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pro_gen");

                    b.HasOne("FIFA_API.Models.EntityFramework.Pays", "PaysProduit")
                        .WithMany("ProduitsPays")
                        .HasForeignKey("PaysId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_pro_pay");

                    b.Navigation("CategorieNavigation");

                    b.Navigation("CompetitionProduit");

                    b.Navigation("GenreProduit");

                    b.Navigation("PaysProduit");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.ProduitSimilaire", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Produit", "DeuxiemeProduit")
                        .WithMany("ProduitSimilaireLienDeux")
                        .HasForeignKey("ProduitDeuxId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_prs_pro_deux");

                    b.HasOne("FIFA_API.Models.EntityFramework.Produit", "PremierProduit")
                        .WithMany("ProduitSimilaireLienUn")
                        .HasForeignKey("ProduitUnId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_prs_pro_un");

                    b.Navigation("DeuxiemeProduit");

                    b.Navigation("PremierProduit");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Reglement", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Commande", "CommandeRegle")
                        .WithMany("ReglementsCommande")
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_reg_cmd");

                    b.Navigation("CommandeRegle");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Remporte", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "JoueurRemportant")
                        .WithMany("RemportesJoueur")
                        .HasForeignKey("JoueurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_rem_jou");

                    b.HasOne("FIFA_API.Models.EntityFramework.Trophee", "TropheeRemporte")
                        .WithMany("RemportesTrophee")
                        .HasForeignKey("TropheeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_rem_tro");

                    b.Navigation("JoueurRemportant");

                    b.Navigation("TropheeRemporte");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.SousCategorie", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Categorie", "ObjCategorieEnfant")
                        .WithMany("EnfantsCategorie")
                        .HasForeignKey("CategorieEnfantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sct_catenf");

                    b.HasOne("FIFA_API.Models.EntityFramework.Categorie", "ObjCategorieParent")
                        .WithMany("ParentsCategorie")
                        .HasForeignKey("CategorieParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sct_catpar");

                    b.Navigation("ObjCategorieEnfant");

                    b.Navigation("ObjCategorieParent");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Stock", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Taille", "TailleStockee")
                        .WithMany("StocksTaille")
                        .HasForeignKey("TailleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_stk_tai");

                    b.HasOne("FIFA_API.Models.EntityFramework.VarianteProduit", "VarianteStockee")
                        .WithMany("StocksVariante")
                        .HasForeignKey("VarianteProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_stk_vpd");

                    b.Navigation("TailleStockee");

                    b.Navigation("VarianteStockee");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Utilisateur", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Activite", "ActiviteUtilisateur")
                        .WithMany("UtilisateursActivite")
                        .HasForeignKey("ActiviteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_utl_act");

                    b.HasOne("FIFA_API.Models.EntityFramework.Adresse", "AdresseUtilisateur")
                        .WithMany("UtilisateursAdresse")
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_utl_adr");

                    b.HasOne("FIFA_API.Models.EntityFramework.Compte", "CompteUtilisateur")
                        .WithOne("UtilisateurCompte")
                        .HasForeignKey("FIFA_API.Models.EntityFramework.Utilisateur", "CompteId")
                        .HasConstraintName("fk_utl_cpt");

                    b.HasOne("FIFA_API.Models.EntityFramework.Langue", "LangueUtilisateur")
                        .WithMany("UtilisateursLangue")
                        .HasForeignKey("LangueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_utl_lng");

                    b.HasOne("FIFA_API.Models.EntityFramework.Monnaie", "MonnaieUtilisateur")
                        .WithMany("UtilisateursMonnaie")
                        .HasForeignKey("MonnaieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_utl_mon");

                    b.HasOne("FIFA_API.Models.EntityFramework.Pays", "PaysFavoriNavigation")
                        .WithMany("UtilisateursFavorisantPays")
                        .HasForeignKey("PaysFavoriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_pay_utl_pays_favori");

                    b.HasOne("FIFA_API.Models.EntityFramework.Pays", "PaysNaissanceNavigation")
                        .WithMany("UtilisateursNesPays")
                        .HasForeignKey("PaysNaissanceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pay_utl_pays_naissance");

                    b.Navigation("ActiviteUtilisateur");

                    b.Navigation("AdresseUtilisateur");

                    b.Navigation("CompteUtilisateur");

                    b.Navigation("LangueUtilisateur");

                    b.Navigation("MonnaieUtilisateur");

                    b.Navigation("PaysFavoriNavigation");

                    b.Navigation("PaysNaissanceNavigation");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.VarianteProduit", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Coloris", "ColorisVariante")
                        .WithMany("VariantesColorises")
                        .HasForeignKey("ColorisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_vpd_clr");

                    b.HasOne("FIFA_API.Models.EntityFramework.Produit", "ProduitVariante")
                        .WithMany("VariantesProduit")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_vpd_pro");

                    b.Navigation("ColorisVariante");

                    b.Navigation("ProduitVariante");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Ville", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Pays", "PaysVille")
                        .WithMany("VillesPays")
                        .HasForeignKey("PaysId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_vil_pay");

                    b.Navigation("PaysVille");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Vote", b =>
                {
                    b.HasOne("FIFA_API.Models.EntityFramework.Joueur", "JoueurVote")
                        .WithMany("VotesJoueur")
                        .HasForeignKey("JoueurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_vot_jou");

                    b.HasOne("FIFA_API.Models.EntityFramework.Theme", "ThemeVote")
                        .WithMany("VotesTheme")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_vot_the");

                    b.HasOne("FIFA_API.Models.EntityFramework.Utilisateur", "UtilisateurVotant")
                        .WithMany("VotesUtilisateur")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_vot_utl");

                    b.Navigation("JoueurVote");

                    b.Navigation("ThemeVote");

                    b.Navigation("UtilisateurVotant");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Action", b =>
                {
                    b.Navigation("ActionFormulaireAide");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Activite", b =>
                {
                    b.Navigation("UtilisateursActivite");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Adresse", b =>
                {
                    b.Navigation("CommandesAdresse");

                    b.Navigation("UtilisateursAdresse");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Album", b =>
                {
                    b.Navigation("CommentairesAlbum");

                    b.Navigation("LiensImages");

                    b.Navigation("LikesAlbums");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Article", b =>
                {
                    b.Navigation("BlogsArticle");

                    b.Navigation("CommentairesArticle");

                    b.Navigation("LiensJoueur");

                    b.Navigation("LiensMedias");

                    b.Navigation("LikesArticles");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Blog", b =>
                {
                    b.Navigation("CommentairesBlog");

                    b.Navigation("LiensImages");

                    b.Navigation("LikesBlogs");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Caracteristique", b =>
                {
                    b.Navigation("LienProduits");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Categorie", b =>
                {
                    b.Navigation("EnfantsCategorie");

                    b.Navigation("ParentsCategorie");

                    b.Navigation("ProduitsCategorie");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Club", b =>
                {
                    b.Navigation("JoueursClub");

                    b.Navigation("MatchesDomicile");

                    b.Navigation("MatchesExterieur");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Coloris", b =>
                {
                    b.Navigation("VariantesColorises");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Commande", b =>
                {
                    b.Navigation("LignesCommandes");

                    b.Navigation("ReglementsCommande");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Commentaire", b =>
                {
                    b.Navigation("CommenteCommentaire");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Competition", b =>
                {
                    b.Navigation("ProduitsCompetition");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Compte", b =>
                {
                    b.Navigation("UtilisateurCompte");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Document", b =>
                {
                    b.Navigation("CommentairesDocument");

                    b.Navigation("LikesDocuments");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Genre", b =>
                {
                    b.Navigation("ProduitsGenre");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Image", b =>
                {
                    b.Navigation("ImagesVariante");

                    b.Navigation("LiensAlbums");

                    b.Navigation("LiensBlogs");

                    b.Navigation("LiensJoueurs");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Joueur", b =>
                {
                    b.Navigation("LienAnecdotes");

                    b.Navigation("LienTheme");

                    b.Navigation("LiensArticles");

                    b.Navigation("LiensImages");

                    b.Navigation("Matches_joue");

                    b.Navigation("RemportesJoueur");

                    b.Navigation("VotesJoueur");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Langue", b =>
                {
                    b.Navigation("UtilisateursLangue");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Livraison", b =>
                {
                    b.Navigation("CommandesLivraison");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Match", b =>
                {
                    b.Navigation("Matches_joue");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Media", b =>
                {
                    b.Navigation("ImagesMedia");

                    b.Navigation("LiensArticles");

                    b.Navigation("MediaFilm");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Monnaie", b =>
                {
                    b.Navigation("UtilisateursMonnaie");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Pays", b =>
                {
                    b.Navigation("ProduitsPays");

                    b.Navigation("UtilisateursFavorisantPays");

                    b.Navigation("UtilisateursNesPays");

                    b.Navigation("VillesPays");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Poste", b =>
                {
                    b.Navigation("JoueursPoste");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Produit", b =>
                {
                    b.Navigation("DevisProduit");

                    b.Navigation("LienCaracteristiques");

                    b.Navigation("ProduitSimilaireLienDeux");

                    b.Navigation("ProduitSimilaireLienUn");

                    b.Navigation("VariantesProduit");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Taille", b =>
                {
                    b.Navigation("LignesCommandes");

                    b.Navigation("StocksTaille");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Theme", b =>
                {
                    b.Navigation("LienJoueur");

                    b.Navigation("VotesTheme");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Trophee", b =>
                {
                    b.Navigation("RemportesTrophee");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Utilisateur", b =>
                {
                    b.Navigation("CommandesUtilisateur");

                    b.Navigation("CommentairesUtilisateur");

                    b.Navigation("FormulairesAideUtilisateur");

                    b.Navigation("InfosBancairesUtilisateur");

                    b.Navigation("LiensDevis");

                    b.Navigation("LikesAlbums");

                    b.Navigation("LikesArticles");

                    b.Navigation("LikesBlogs");

                    b.Navigation("LikesDocuments");

                    b.Navigation("VotesUtilisateur");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.VarianteProduit", b =>
                {
                    b.Navigation("LienImages");

                    b.Navigation("LignesCommandesVariante");

                    b.Navigation("StocksVariante");
                });

            modelBuilder.Entity("FIFA_API.Models.EntityFramework.Ville", b =>
                {
                    b.Navigation("JoueursVille");

                    b.Navigation("LiensAdresses");
                });
#pragma warning restore 612, 618
        }
    }
}
